name: Linters

on:
  workflow_call:
  workflow_dispatch:

env:
  FORCE_COLOR: "1"  # Make tools pretty.
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"
  PYTHON_LATEST: "3.11"

jobs:

  lint-flake8:
    name: Lint with Flake8
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_LATEST }}
        cache: pip
        cache-dependency-path: |
          setup.cfg
          requirements-dev.txt
    - name: Install dependencies
      run: |
        pip install -U -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        echo "::add-matcher::.github/workflows/flake8-matcher.json"
        python -m flake8 aiomonitor/ examples/ tests/

  lint-isort:
    name: Lint with isort
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_LATEST }}
        check-latest: true
        cache: pip
        cache-dependency-path: |
          setup.cfg
          requirements-dev.txt
    - name: Install dependencies
      run: |
        pip install -U -r requirements-dev.txt
    - name: Lint with isort
      run: |
        python -m isort --check aiomonitor/ examples/ tests/

  lint-black:
    name: Lint with Black
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_LATEST }}
        check-latest: true
        cache: pip
        cache-dependency-path: |
          setup.cfg
          requirements-dev.txt
    - name: Install dependencies
      run: |
        pip install -U -r requirements-dev.txt
    - name: Lint with black
      run: |
        python -m black --check aiomonitor/ examples/ tests/

  typecheck-mypy:
    name: Check typing and annotations
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_LATEST }}
        check-latest: true
        cache: pip
        cache-dependency-path: |
          setup.cfg
          requirements-dev.txt
    - name: Install dependencies
      run: |
        pip install -U -r requirements-dev.txt
    - name: Typecheck with mypy
      run: |
        echo "::add-matcher::.github/workflows/mypy-matcher.json"
        python -m mypy aiomonitor/ examples/ tests/

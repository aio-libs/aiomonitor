name: Run unit tests

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]



jobs:
  test:
    name: Test
    strategy:
      matrix:
        pyver: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu, macos, windows]
        include:
          - pyver: pypy-3.8
            os: ubuntu
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"    # - name: Cache
    - name: Cache PyPI
      uses: actions/cache@v2
      with:
        key: pip-ci-${{ runner.os }}-${{ matrix.pyver }}-${{ hashFiles('requirements-dev.txt') }}
        path: ${{ steps.pip-cache.outputs.dir }}
        restore-keys: |
            pip-ci-${{ runner.os }}-${{ matrix.pyver }}-
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v3.0.0
      with:
        path: requirements-dev.txt
    - name: Run unittests
      run: make test

  check:  # This job does nothing and is only used for the branch protection
    if: always()

    needs: [lint, test]

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: check
    # Run only on pushing a tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run:
        python -m pip install -U build pip wheel twine
    - name: Make dists
      run:
        python -m build
    - name: PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
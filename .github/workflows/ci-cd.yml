---
name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  FORCE_COLOR: "1" # Make tools pretty.
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"
  PYTHON_LATEST: "3.11"
  SETUPTOOLS_SCM_PRETEND_VERSION: "1.0" # avoid warnings about shallow checkout

  # For re-actors/checkout-python-sdist
  sdist-artifact: python-package-distributions

permissions:
  contents: read

jobs:
  build-sdist:
    name: ðŸ“¦ Build the source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout project
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        name: Setup ${{ env.PYTHON_LATEST }}
        with:
          python-version: ${{ env.PYTHON_LATEST }}
      - run: python -Im pip install build
        name: Install core libraries for build and install

      - run: python -Im build
        name: Build artifacts

      - uses: actions/upload-artifact@v3
        name: Upload built artifacts for testing
        with:
          name: ${{ env.sdist-artifact }}
          # NOTE: Exact expected file names are specified here
          # NOTE: as a safety measure â€” if anything weird ends
          # NOTE: up being in this dir or not all dists will be
          # NOTE: produced, this will fail the workflow.
          path: dist/${{ env.sdist-name }}
          retention-days: 15

  tests:
    name: Tests on ${{ matrix.python-version }}
    needs: build-sdist
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "~3.12.0-0"
    continue-on-error: >-
      ${{ contains(matrix.python-version, '~') && true || false }}
    steps:
      - name: Get source code from pre-built sdist
        uses: re-actors/checkout-python-sdist@release/v1
        with:
          workflow-artifact-name: ${{ env.sdist-artifact }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v3
        name: Checkout project to get necessary dependencies for testing
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          pip install --upgrade setuptools
          pip install -r requirements-dev.txt
      - name: Run tests
        run: make test

      - name: Upload coverage data
        uses: codecov/codecov-action@v3
        with:
            token: ${{ secrets.CODECOV_TOKEN }}


  check:  # This job does nothing and is only used for the branch protection
    if: always()
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  deploy:  # Run only on creating release for new tag
    name: Deploy
    runs-on: ubuntu-latest
    needs: check
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/download-artifact@v3
        name: Download artifacts
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        name: Publish package to PyPI
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
